/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.sql.Connection;
import java.util.HashMap;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import model.brands;
import model.items;
import model.stock;
import usecase.supplierUc;
import model.suppliers;
import repository.brandsRepo;
import repository.supplierRepo;
import repository.brandsRepo;
import repository.itemsRepo;
import repository.stocksRepo;
import usecase.BrandUC;
import usecase.itemsUc;
import usecase.stockUc;

/**
 *
 * @author ADMINPUSING-PC
 */
public class ItemManagementGUI extends javax.swing.JPanel {
    
    private final itemsUc itemUc;
    private final BrandUC brandUc;
    private DefaultTableModel tableModel;
    private int userId = 1;
    
     HashMap<String, Integer> brandMap= new HashMap<String,Integer>();
   
    
    public ItemManagementGUI(Connection conn) {
        initComponents();
        
        this.itemUc = new itemsUc(new itemsRepo(conn), new stocksRepo(conn));
        this.brandUc = new BrandUC(new brandsRepo(conn), new itemsRepo(conn));
        
        this.tableModel = (DefaultTableModel) tItem.getModel();

        // Initialize the table model
        tableModel = new DefaultTableModel(new Object[][]{}, new String[]{"ID", "Nama Barang", "Brand" ,"Harga Jual", "Stock Awal", "Stock Masuk", "Stock Keluar", "Sisa Stock", "Status"});
        new JTable(tableModel);
       
        loadItems();
        loadCbBrands();
        
        // Add selection listener to jTable2
        tItem.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting() && tItem.getSelectedRow() != -1) {
                    int selectedRow = tItem.getSelectedRow();
                    textFieldId.setText(tItem.getValueAt(selectedRow, 0).toString());
                    textFieldItem.setText(tItem.getValueAt(selectedRow, 1).toString());
                    cbBrand.setSelectedItem(tItem.getValueAt(selectedRow, 2).toString());
                    textFieldSellPrice.setText(tItem.getValueAt(selectedRow, 3).toString());
                    textFieldFirstStock.setText(tItem.getValueAt(selectedRow, 4).toString());
                    textFieldFirstStock.setEditable(false);
                }
            }
        });
        
      
        textFieldId.setEditable(false);
        textFieldId.setVisible(false);
    }
   
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        textFieldItem = new javax.swing.JTextField();
        textFieldId = new javax.swing.JTextField();
        btnCreate = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tItem = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cbBrand = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        textFieldSellPrice = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        textFieldFirstStock = new javax.swing.JTextField();
        btnCreate1 = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setBackground(new java.awt.Color(255, 255, 204));
        setToolTipText("");
        setPreferredSize(new java.awt.Dimension(621, 581));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Gill Sans", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 102));
        jLabel1.setText("Nama Barang");

        jLabel2.setFont(new java.awt.Font("Gill Sans", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 102, 102));
        jLabel2.setText("Brand");

        textFieldItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldItemActionPerformed(evt);
            }
        });

        textFieldId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldIdActionPerformed(evt);
            }
        });

        btnCreate.setBackground(new java.awt.Color(255, 153, 153));
        btnCreate.setForeground(new java.awt.Color(255, 255, 255));
        btnCreate.setText("Create");
        btnCreate.setBorder(null);
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        btnUpdate.setBackground(new java.awt.Color(255, 153, 153));
        btnUpdate.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdate.setText("Update");
        btnUpdate.setBorder(null);
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(255, 153, 153));
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.setText("Delete");
        btnDelete.setBorder(null);
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        tItem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tItem);

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Gill Sans", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 102, 102));

        jLabel6.setFont(new java.awt.Font("Gill Sans", 0, 36)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(102, 102, 102));
        jLabel6.setText("ITEM MANAGEMENT");

        cbBrand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbBrandActionPerformed(evt);
            }
        });

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Gill Sans", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 102, 102));
        jLabel3.setText("Sell Price");

        textFieldSellPrice.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        textFieldSellPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldSellPriceActionPerformed(evt);
            }
        });
        textFieldSellPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textFieldSellPriceKeyTyped(evt);
            }
        });

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Gill Sans", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 102, 102));
        jLabel4.setText("Stock Awal");

        textFieldFirstStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldFirstStockActionPerformed(evt);
            }
        });
        textFieldFirstStock.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textFieldFirstStockKeyPressed(evt);
            }
        });

        btnCreate1.setBackground(new java.awt.Color(255, 153, 153));
        btnCreate1.setForeground(new java.awt.Color(255, 255, 255));
        btnCreate1.setText("Load Data");
        btnCreate1.setBorder(null);
        btnCreate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreate1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(93, 93, 93)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 451, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(142, 142, 142)
                                .addComponent(jLabel5)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnCreate1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(textFieldId, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel1)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel4))
                                        .addGap(43, 43, 43)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(cbBrand, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(textFieldItem, javax.swing.GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE)
                                            .addComponent(textFieldFirstStock, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(textFieldSellPrice))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(29, 29, 29))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jLabel6)
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(textFieldItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbBrand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(textFieldSellPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(textFieldFirstStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(textFieldId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCreate1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void textFieldItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldItemActionPerformed

    private void textFieldIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldIdActionPerformed
   
    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        // TODO add your handling code here:   
        
        String name = textFieldItem.getText().trim();
        if (name.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Nama barang tidak boleh kosong.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
        
        Double sellPrice = Double.parseDouble(textFieldSellPrice.getText().trim());
        if (sellPrice <= 0) {
            JOptionPane.showMessageDialog(this, "harga jual tidak boleh 0.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        items item = new items();
        item.setItemName(name);
        item.setBrandId(brandMap.get(cbBrand.getSelectedItem().toString()));
        item.setPrice(sellPrice);
        item.setStatus(true);
        
        stock stock = new stock();
        stock.setFirstStock(Integer.parseInt(textFieldFirstStock.getText().trim()));
        stock.setRemainingStock(stock.getFirstStock());
        stock.setStockIn(0);
        stock.setStockOut(0);
            
        boolean success = itemUc.createItem(item,stock);
        
        JOptionPane.showMessageDialog(this, "CREATE: " + (success ? "Berhasil" : "Gagal"));
        if (success) {
            clearInputFields();
            loadItems();
            System.out.println("Registrasi item berhasil!");
        }           
    }//GEN-LAST:event_btnCreateActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        
            String idText = textFieldId.getText().trim();
            if (idText.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Pilih item terlebih dahulu dari tabel.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            int id = Integer.parseInt(idText);

            String name = textFieldItem.getText().trim();
           
            
            items item = new items();
            item.setId(id);
            item.setItemName(name);
            item.setBrandId(brandMap.get(cbBrand.getSelectedItem().toString()));
            item.setPrice(Double.parseDouble(textFieldSellPrice.getText().trim()));

            if (name.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Nama item tidak boleh kosong.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
                       
            boolean success = itemUc.updateItem(item, item.getId());
            JOptionPane.showMessageDialog(this, "UPDATE: " + (success ? "Update item berhasil!" : "Gagal"));
            if(success) {   
               clearInputFields();
               textFieldFirstStock.setEditable(true);
               loadItems();
            }
     
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
            String idText = textFieldId.getText().trim();
            if (idText.isEmpty()) {
                JOptionPane.showMessageDialog(this, "item belum dipilih atau Nonaktif!.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            int id = Integer.parseInt(idText);
   
            boolean deleteItem = itemUc.deleteItem(id);
            if (deleteItem) {
                JOptionPane.showMessageDialog(this, "DELETE: " + (deleteItem ? "Berhasil" : "Gagal"));
                clearInputFields();
                loadItems();
            }
                      
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed

    }//GEN-LAST:event_jButton5ActionPerformed

    private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField5ActionPerformed
        // TODO add your handling code here:
    
    }//GEN-LAST:event_jTextField5ActionPerformed

    private void cbBrandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbBrandActionPerformed

    }//GEN-LAST:event_cbBrandActionPerformed

    private void textFieldSellPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldSellPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldSellPriceActionPerformed

    private void textFieldFirstStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldFirstStockActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldFirstStockActionPerformed

    private void textFieldSellPriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textFieldSellPriceKeyTyped
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume();
        }

    }//GEN-LAST:event_textFieldSellPriceKeyTyped

    private void textFieldFirstStockKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textFieldFirstStockKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldFirstStockKeyPressed

    private void btnCreate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreate1ActionPerformed
        loadItems();
        loadCbBrands();
    }//GEN-LAST:event_btnCreate1ActionPerformed
    
    private void clearInputFields() {
        textFieldId.setText("");
        textFieldItem.setText("");
        textFieldSellPrice.setText("");
        textFieldFirstStock.setText("");
    }
    
    private void loadItems(){
        tableModel.setRowCount(0);
        List<items> itemList = itemUc.getAllItems("",0);
        
        for (items i : itemList){
            tableModel.addRow(new Object[]{
                i.getId(),
                i.getItemName(),
                i.getBrandName(),
                i.getPrice(),
                i.getFirstStock(),
                i.getStockIn(),
                i.getStockOut(),
                i.getRemainingStock(),
                i.getStatus() ? "Aktif" : "Nonaktif"
            });
        }
        
        tItem.setModel(tableModel);

    }

    private void loadCbBrands() {
       List<brands> brandList = brandUc.listBrands("",0, 0);
        
        for (brands b : brandList) {
            brandMap.put(b.getBrandName(), b.getId());
            cbBrand.addItem(b.getBrandName());  
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnCreate1;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cbBrand;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable tItem;
    private javax.swing.JTextField textFieldFirstStock;
    private javax.swing.JTextField textFieldId;
    private javax.swing.JTextField textFieldItem;
    private javax.swing.JTextField textFieldSellPrice;
    // End of variables declaration//GEN-END:variables

}